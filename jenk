pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        ECR_REGISTRY = '552157865569.dkr.ecr.us-east-1.amazonaws.com'
        ECR_REPOSITORY = 'eks'
        AWS_CREDENTIALS_ID = 'awsmaster' // Replace with your AWS credentials ID in Jenkins
        DOCKER_CREDENTIALS = credentials('4924cfb9-6382-41d5-a48f-0b846f61ba11')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY', credentialsId: AWS_CREDENTIALS_ID]]) {
                        sh '''
                            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
                            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${env.BUILD_ID} .
                        '''
                    }
                }
            }
        }

        stage('Push to ECR') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY', credentialsId: AWS_CREDENTIALS_ID]]) {
                        sh '''
                            docker push $ECR_REGISTRY/$ECR_REPOSITORY:${env.BUILD_ID}
                            docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${env.BUILD_ID} $ECR_REGISTRY/$ECR_REPOSITORY:latest
                            docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
                        '''
                    }
                }
            }
        }
    }
}

